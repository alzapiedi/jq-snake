{"version":3,"sources":["webpack/bootstrap 172d610ed266533ba8ca","./js/main.js","./js/snake.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AChHA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,QAAO;AACP;AACA;;AAEA,QAAO;AACP;;AAEA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA;;AAEA,YAAW;AACX;AACA;;AAEA,YAAW;AACX;;AAEA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;;;AAGA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 172d610ed266533ba8ca\n **/","\n(function() {\n  window.Snake = window.Snake || {};\n  var SnakeBoard = window.Snake.SnakeBoard = require(\"./snake.js\");\n  var SnakeView = window.Snake.SnakeView = require(\"./snake-view.js\");\n  var board = new SnakeBoard();\n  var rootEl = $('.snake');\n  var view = new SnakeView(board, rootEl);\n\n  view.setupGrid();\n  view.play();\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Snake = function () {\n  this.direction = \"N\";\n  this.segments = [[parseInt(Math.random() * 15 + 10),parseInt(Math.random() * 25)]];\n  this.head = this.segments[0];\n  this.score = 0;\n};\n\nSnake.prototype.move = function () {\n  this.lastPosition = this.segments[this.segments.length - 1];\n  for(i = this.segments.length - 1; i > 0; i--) {\n    this.segments[i] = this.segments[i - 1];\n  }\n  if (this.direction === \"N\") {\n    this.segments[0] = this.plus(this.head, [-1, 0]);\n  } else if (this.direction === \"E\") {\n    this.segments[0] = this.plus(this.head, [0, 1]);\n  } else if (this.direction === \"W\") {\n    this.segments[0] = this.plus(this.head, [0, -1]);\n  } else if (this.direction === \"S\") {\n    this.segments[0] = this.plus(this.head, [1, 0]);\n  }\n  this.head = this.segments[0];\n};\n\nSnake.prototype.turn = function (direction) {\n  if (this.isOpposite(direction)) {\n    return;\n  } else {\n    this.direction = direction;\n  }\n};\n\nSnake.prototype.isOpposite = function (dir) {\n  if (this.direction === \"N\") {\n    return dir === \"S\";\n  } else if (this.direction === \"E\") {\n    return dir === \"W\";\n  } else if (this.direction === \"W\") {\n    return dir === \"E\";\n  } else if (this.direction === \"S\") {\n    return dir === \"N\";\n  }\n};\n\nSnake.prototype.plus = function (pos1, direction) {\n  return [pos1[0] + direction[0], pos1[1] + direction[1]];\n};\n\nSnake.prototype.equal = function (pos1, pos2) {\n  return (pos1[0] === pos2[0] && pos1[1] === pos2[1]);\n};\n\nvar Board = function () {\n  this.grid = [];\n  for (var i = 0; i < 25; i++) {\n    this.grid.push(new Array(25));\n  }\n  this.snake1 = new Snake();\n  this.snake2 = new Snake();\n  this.apple = this.setApple();\n};\nBoard.prototype.setApple = function () {\n  var taken = true;\n  while (taken) {\n    randomApple = [parseInt(Math.random() * 25),parseInt(Math.random() * 25)];\n    if (this.occupied(randomApple) === false) {\n      taken = false;\n    }\n  }\n  return randomApple;\n};\n\nBoard.prototype.occupied = function (pos) {\n  segments = this.snake1.segments.concat(this.snake2.segments);\n  for (var i = 0; i < segments.length; i++) {\n    if (this.snake1.equal(pos, segments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nBoard.prototype.checkApple = function () {\n  if (this.snake1.equal(this.snake1.head, this.apple)) {\n    this.snake1.segments.push(this.snake1.lastPosition);\n    this.snake1.score += 10;\n    this.apple = this.setApple();\n  }\n  if (this.snake2.equal(this.snake2.head, this.apple)) {\n    this.snake2.segments.push(this.snake2.lastPosition);\n    this.snake2.score += 10;\n    this.apple = this.setApple();\n  }\n};\n\nBoard.prototype.checkSnake = function () {\n  var segments = this.snake1.segments.concat(this.snake2.segments);\n  var head1 = this.snake1.head;\n  var head2 = this.snake2.head;\n  var collide = true;\n  for (var i = 0; i < segments.length; i++) {\n    for (var j = i + 1; j < segments.length; j++) {\n      if (segments[i][0] === segments[j][0] && segments[i][1] === segments[j][1]) {\n        collide = false;\n      }\n    }\n  }\n  var bounds = (head1[0] >= 0 && head1[0] < 25 && head1[1] >= 0 && head1[1] < 25 && head2[0] >= 0 && head2[0] < 25 && head2[1] >= 0 && head2[1] < 25);\n  return collide && bounds;\n};\n\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 1\n ** module chunks = 0\n **/","var Board = require(\"./snake.js\");\n\nvar View = function (board, $el) {\n  this.board = board;\n  this.$el = $el;\n};\n\nView.prototype.play = function () {\n  var callback = function () {\n    this.bindEvents();\n\n    if (this.board.checkSnake()) {\n      this.board.snake1.move();\n      this.board.snake2.move();\n      this.board.checkApple();\n      this.render();\n    }\n    else {\n      this.gameOver();\n      clearInterval();\n    }\n  }.bind(this);\n  setInterval(callback, 80);\n}\n\nView.prototype.bindEvents = function () {\n  snake1 = this.board.snake1;\n  snake2 = this.board.snake2;\n  key('left', function () {\n    snake1.turn(\"W\");\n  });\n      key('right', function () {\n        snake1.turn(\"E\");\n\n      });\n      key('up', function () {\n        snake1.turn(\"N\");\n\n      });\n      key('down', function () {\n\n        snake1.turn(\"S\");\n      });\n\n      key('a', function () {\n        snake2.turn(\"W\");\n      });\n          key('d', function () {\n            snake2.turn(\"E\");\n\n          });\n          key('w', function () {\n            snake2.turn(\"N\");\n\n          });\n          key('s', function () {\n\n            snake2.turn(\"S\");\n          });\n      var resetGame = function (e) {\n        $('h2').removeClass();\n        $('button').removeClass();\n        this.board = new window.Snake.SnakeBoard();\n        $('li').each(function (i, el) {\n          $(el).removeClass().addClass('open');\n        });\n      }.bind(this);\n      $('button').on('click', resetGame)\n};\n\n\nView.prototype.setupGrid = function () {\n  this.$el.append(\"<ul>\");\n  var $ul = $(\"<ul>\").addClass(\"snake-grid group\");\n  for (var i = 0; i < 625; i++) {\n    var pos = [parseInt(i / 25), i % 25];\n    $(\"<li>\").addClass(\"open\").data(\"pos\", pos).appendTo($ul);\n  }\n  this.$el.html($ul);\n};\n\nView.prototype.gameOver = function () {\n  $('h2').addClass('game-over');\n  $('button').addClass('game-over');\n  $('.apple').removeClass();\n}\n\nView.prototype.render = function () {\n  var board = this.board;\n  var snake1 = board.snake1;\n  var snake2 = board.snake2;\n  var positions1 = snake1.segments;\n  var positions2 = snake2.segments;\n  $('.score1').html(snake1.score);\n  $('.score2').html(snake2.score);\n  $('li').each(function (i, el) {\n    $(el).removeClass().addClass('open');\n    pos = $(el).data(\"pos\");\n    for(var j=0; j < positions1.length; j++) {\n      if (snake1.equal(pos,positions1[j])) {\n        $(el).addClass('has-snake1').removeClass('open');\n      }\n      else if (snake1.equal(pos, board.apple)) {\n        $(el).addClass('apple').removeClass('open');\n      }\n    }\n    for(var j=0; j < positions2.length; j++) {\n      if (snake1.equal(pos,positions2[j])) {\n        $(el).addClass('has-snake2').removeClass('open');\n      }\n      else if (snake1.equal(pos, board.apple)) {\n        $(el).addClass('apple').removeClass('open');\n      }\n    }\n  });\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}