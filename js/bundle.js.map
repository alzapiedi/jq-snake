{"version":3,"sources":["webpack/bootstrap ec8dff9711739f443258","./js/main.js","./js/snake.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;;;AAGA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ec8dff9711739f443258\n **/","\r\n(function() {\r\n  window.Snake = window.Snake || {};\r\n  var SnakeBoard = window.Snake.SnakeBoard = require(\"./snake.js\");\r\n  var SnakeView = window.Snake.SnakeView = require(\"./snake-view.js\");\r\n  var board = new SnakeBoard();\r\n  var rootEl = $('.snake');\r\n  var view = new SnakeView(board, rootEl);\r\n\r\n  view.setupGrid();\r\n  view.play();\r\n})();\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Snake = function () {\r\n  this.direction = \"N\";\r\n  this.segments = [[parseInt(Math.random() * 15 + 10),parseInt(Math.random() * 25)]];\r\n  this.head = this.segments[0];\r\n  this.score = 0;\r\n};\r\n\r\nSnake.prototype.move = function () {\r\n  this.lastPosition = this.segments[this.segments.length - 1];\r\n  for(i = this.segments.length - 1; i > 0; i--) {\r\n    this.segments[i] = this.segments[i - 1];\r\n  }\r\n  if (this.direction === \"N\") {\r\n    this.segments[0] = this.plus(this.head, [-1, 0]);\r\n  } else if (this.direction === \"E\") {\r\n    this.segments[0] = this.plus(this.head, [0, 1]);\r\n  } else if (this.direction === \"W\") {\r\n    this.segments[0] = this.plus(this.head, [0, -1]);\r\n  } else if (this.direction === \"S\") {\r\n    this.segments[0] = this.plus(this.head, [1, 0]);\r\n  }\r\n  this.head = this.segments[0];\r\n};\r\n\r\nSnake.prototype.turn = function (direction) {\r\n  if (this.isOpposite(direction)) {\r\n    return;\r\n  } else {\r\n    this.direction = direction;\r\n  }\r\n};\r\n\r\nSnake.prototype.isOpposite = function (dir) {\r\n  if (this.direction === \"N\") {\r\n    return dir === \"S\";\r\n  } else if (this.direction === \"E\") {\r\n    return dir === \"W\";\r\n  } else if (this.direction === \"W\") {\r\n    return dir === \"E\";\r\n  } else if (this.direction === \"S\") {\r\n    return dir === \"N\";\r\n  }\r\n};\r\n\r\nSnake.prototype.plus = function (pos1, direction) {\r\n  return [pos1[0] + direction[0], pos1[1] + direction[1]];\r\n};\r\n\r\nSnake.prototype.equal = function (pos1, pos2) {\r\n  return (pos1[0] === pos2[0] && pos1[1] === pos2[1]);\r\n};\r\n\r\nvar Board = function () {\r\n  this.grid = [];\r\n  for (var i = 0; i < 25; i++) {\r\n    this.grid.push(new Array(25));\r\n  }\r\n  this.snake1 = new Snake();\r\n  this.apple = this.setApple();\r\n};\r\nBoard.prototype.setApple = function () {\r\n  var taken = true;\r\n  while (taken) {\r\n    randomApple = [parseInt(Math.random() * 25),parseInt(Math.random() * 25)];\r\n    if (this.occupied(randomApple) === false) {\r\n      taken = false;\r\n    }\r\n  }\r\n  return randomApple;\r\n};\r\n\r\nBoard.prototype.occupied = function (pos) {\r\n  segments = this.snake1.segments;\r\n  for (var i = 0; i < segments.length; i++) {\r\n    if (this.snake1.equal(pos, segments[i])) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nBoard.prototype.checkApple = function () {\r\n  if (this.snake1.equal(this.snake1.head, this.apple)) {\r\n    this.snake1.segments.push(this.snake1.lastPosition);\r\n    this.snake1.score += 10;\r\n    this.apple = this.setApple();\r\n  }\r\n};\r\n\r\nBoard.prototype.checkSnake = function () {\r\n  var segments = this.snake1.segments;\r\n  var head1 = this.snake1.head;\r\n  var collide = true;\r\n  for (var i = 0; i < segments.length; i++) {\r\n    for (var j = i + 1; j < segments.length; j++) {\r\n      if (segments[i][0] === segments[j][0] && segments[i][1] === segments[j][1]) {\r\n        collide = false;\r\n      }\r\n    }\r\n  }\r\n  var bounds = (head1[0] >= 0 && head1[0] < 25 && head1[1] >= 0 && head1[1] < 25);\r\n  return collide && bounds;\r\n};\r\n\r\n\r\nmodule.exports = Board;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 1\n ** module chunks = 0\n **/","var Board = require(\"./snake.js\");\r\n\r\nvar View = function (board, $el) {\r\n  this.board = board;\r\n  this.$el = $el;\r\n};\r\n\r\nView.prototype.play = function () {\r\n  var callback = function () {\r\n    this.bindEvents();\r\n\r\n    if (this.board.checkSnake()) {\r\n      this.board.snake1.move();\r\n      this.board.checkApple();\r\n      this.render();\r\n    }\r\n    else {\r\n      this.gameOver();\r\n      clearInterval();\r\n    }\r\n  }.bind(this);\r\n  setInterval(callback, 80);\r\n}\r\n\r\nView.prototype.bindEvents = function () {\r\n  snake1 = this.board.snake1;\r\n  key('left', function () {\r\n    snake1.turn(\"W\");\r\n  });\r\n      key('right', function () {\r\n        snake1.turn(\"E\");\r\n      });\r\n      key('up', function () {\r\n        snake1.turn(\"N\");\r\n      });\r\n      key('down', function () {\r\n        snake1.turn(\"S\");\r\n      });\r\n\r\n      var resetGame = function (e) {\r\n        $('h2').removeClass();\r\n        $('button').removeClass();\r\n        this.board = new window.Snake.SnakeBoard();\r\n        $('li').each(function (i, el) {\r\n          $(el).removeClass().addClass('open');\r\n        });\r\n      }.bind(this);\r\n      $('button').on('click', resetGame)\r\n};\r\n\r\n\r\nView.prototype.setupGrid = function () {\r\n  this.$el.append(\"<ul>\");\r\n  var $ul = $(\"<ul>\").addClass(\"snake-grid group\");\r\n  for (var i = 0; i < 625; i++) {\r\n    var pos = [parseInt(i / 25), i % 25];\r\n    $(\"<li>\").addClass(\"open\").data(\"pos\", pos).appendTo($ul);\r\n  }\r\n  this.$el.html($ul);\r\n};\r\n\r\nView.prototype.gameOver = function () {\r\n  $('h2').addClass('game-over');\r\n  $('button').addClass('game-over');\r\n  $('.apple').removeClass();\r\n}\r\n\r\nView.prototype.render = function () {\r\n  var board = this.board;\r\n  var snake1 = board.snake1;\r\n\r\n  var positions1 = snake1.segments;\r\n\r\n  $('.score1').html(snake1.score);\r\n\r\n  $('li').each(function (i, el) {\r\n    $(el).removeClass().addClass('open');\r\n    pos = $(el).data(\"pos\");\r\n    for(var j=0; j < positions1.length; j++) {\r\n      if (snake1.equal(pos,positions1[j])) {\r\n        $(el).addClass('has-snake1').removeClass('open');\r\n      }\r\n      else if (snake1.equal(pos, board.apple)) {\r\n        $(el).addClass('apple').removeClass('open');\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = View;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}